CREATE TABLE READERS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT primary key ,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           READER_ID INT(11) NOT NULL,
                           OLD_FIRSTNAME VARCHAR(10),
                           NEW_FIRSTNAME VARCHAR(10),
                           OLD_LASTNAME VARCHAR(10),
                           NEW_LASTNAME VARCHAR(10),
                           OLD_PESELID INT(11),
                           NEW_PESELID INT(11),
                           OLD_VIP_LEVEL INT(11),
                           NEW_VIP_LEVEL INT(11)
);



CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT primary key,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           OLD_TITLE VARCHAR(10),
                           NEW_TITLE VARCHAR(10),
                           OLD_PUBYEAR INT(11),
                           NEW_PUBYEAR INT(11),
                           OLD_BESTSELLER BOOLEAN,
                           NEW_BESTSELLER BOOLEAN
);



DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON readers
    FOR EACH ROW
BEGIN
    INSERT INTO readers_aud (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
                           NEW_PESELID, NEW_VIP_LEVEL)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.READER_ID, NEW.LASTNAME,
              NEW.VIP_LEVEL);
END $$



DELIMITER ;

DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON books
    FOR EACH ROW
BEGIN
    INSERT INTO books_aud (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,
                           NEW_BESTSELLER)
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;



DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON readers
    FOR EACH ROW
BEGIN
    INSERT INTO readers_aud (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
        VALUE(CURTIME(), 'DELETE',OLD.READER_ID,  OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON books
    FOR EACH ROW
BEGIN
    INSERT INTO books_aud (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID,  OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON readers
    FOR EACH ROW
BEGIN
    INSERT INTO readers_aud (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME,
                           NEW_PESELID, NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME,
                           OLD_PESELID, OLD_VIP_LEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
              NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME,
              OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON books
    FOR EACH ROW
BEGIN
    INSERT INTO books_aud (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,
                           NEW_BESTSELLER, OLD_TITLE, OLD_PUBYEAR,
                           OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR,
              NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR,
              OLD.BESTSELLER);
END $$

DELIMITER ;